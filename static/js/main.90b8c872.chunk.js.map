{"version":3,"sources":["components/Timer.jsx","components/Card.jsx","redux/reducers/selectors.js","redux/action/cardsAction.js","components/PlayGround.jsx","core/cardsArray.js","App.js","core/shuffleArr.js","redux/reducers/cardReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Timer","React","useState","timer","setTimer","timerInt","setInterval","useEffect","clearInterval","Box","mb","Typography","variant","gutterBottom","component","useStyles","makeStyles","root","borderRadius","background","boxShadow","width","height","margin","cursor","display","justifyContent","alignItems","padding","yellowBlock","position","content","top","left","zIndex","checked","Card","card","onClick","classes","className","classNames","visible","src","path","alt","selectPlayGround","state","playGround","selectCards","cards","selectCurrentPicure","currentPicure","setCards","arr","type","payload","setCurrentPicture","picturePath","flexFlow","alignContent","blockClick","pointerEvents","PlayGround","memo","dispatch","useDispatch","useSelector","currentPicture","enqueueSnackbar","useSnackbar","blockClickPlayground","setBlockClickPlayground","map","index","cardClick","name","newCardsArr","setTimeout","handleCardClick","App","array","i","length","j","Math","floor","random","shuffle","Container","maxWidth","initialState","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","ReactDOM","render","maxSnack","document","getElementById"],"mappings":"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","file":"static/js/main.90b8c872.chunk.js","sourcesContent":["import React from 'react'\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box'\r\n\r\nfunction Timer() {\r\n    const [timer, setTimer] = React.useState(0)\r\n\r\n    const timerInt = setInterval(() => {\r\n        setTimer(timer + 1)\r\n    }, 1000)\r\n\r\n    React.useEffect(() => {\r\n        return () => {\r\n            clearInterval(timerInt)\r\n        }\r\n    }, [timerInt])\r\n\r\n    return (\r\n        <Box mb={3}>\r\n            <Typography variant=\"h6\" gutterBottom component=\"div\">Прошло времени: {timer} секунд</Typography>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Timer;","import React from 'react'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport classNames from 'classnames'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderRadius: '10px',\r\n        background: '#fff;',\r\n        boxShadow: '0 0 3px 0 #ccc',\r\n        width: '52px',\r\n        height: '52px',\r\n        margin: '5px',\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        padding: '8px',\r\n    },\r\n    yellowBlock: {\r\n        position: 'relative',\r\n        '&::before': {\r\n            content: '\"\"',\r\n            borderRadius: '10px',\r\n            background: '#ffe540',\r\n            display: 'block',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n        },\r\n        '&:hover::before': {\r\n            boxShadow: '0px 0 7px 0 #ccc',\r\n\r\n        }\r\n    },\r\n\r\n    checked: {\r\n        position: 'relative',\r\n        '&::before': {\r\n            content: '\"\"',\r\n            borderRadius: '10px',\r\n            background: '#ccc',\r\n            display: 'block',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            position: 'absolute',\r\n            zIndex: 100,\r\n        },\r\n        '&:hover::before': {\r\n            boxShadow: '0px 0 7px 0 #ccc',\r\n\r\n        }\r\n    }\r\n});\r\n\r\nfunction Card({ card, onClick }) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div\r\n            className={classNames(classes.root, !card.visible && classes.yellowBlock, card.checked && classes.checked)}\r\n            onClick={onClick}\r\n        >\r\n            <img src={card.path} alt=\"pic\" />\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Card;\r\n","export const selectPlayGround = state => state.playGround\r\n\r\nexport const selectCards = state => selectPlayGround(state).cards\r\nexport const selectCurrentPicure = state => selectPlayGround(state).currentPicure\r\n","export const setCards = arr => ({\r\n    type: 'SET_CARDS',\r\n    payload: arr,\r\n})\r\n\r\nexport const setCurrentPicture = picturePath => ({\r\n    type: 'SET_CURRENT_PICTURE',\r\n    payload: picturePath,\r\n})\r\n","import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Card from './Card'\r\n\r\nimport { selectCards, selectCurrentPicure } from '../redux/reducers/selectors';\r\nimport { setCards, setCurrentPicture } from '../redux/action/cardsAction';\r\n\r\nimport { useSnackbar } from 'notistack'\r\n\r\nimport classNames from 'classnames'\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        borderRadius: '10px',\r\n        background: '#eaeaea',\r\n        boxShadow: '0 0 5px 0 #ccc',\r\n        width: '400px',\r\n        height: '400px',\r\n        margin: '0 auto',\r\n        display: 'flex',\r\n        flexFlow: 'row wrap',\r\n        justifyContent: 'space-evenly',\r\n        alignContent: 'space-evenly'\r\n    },\r\n    blockClick: {\r\n        pointerEvents: 'none',\r\n        cursor: 'default'\r\n    }\r\n});\r\n\r\nexport const PlayGround = React.memo(() => {\r\n    const classes = useStyles()\r\n    const dispatch = useDispatch()\r\n\r\n    const cards = useSelector(selectCards)\r\n    const currentPicture = useSelector(selectCurrentPicure)\r\n\r\n    const { enqueueSnackbar } = useSnackbar()\r\n\r\n    const [blockClickPlayground, setBlockClickPlayground] = useState(false)\r\n\r\n    const handleCardClick = (cardClick) => {\r\n        if (currentPicture) {\r\n            if (cardClick.path === currentPicture.path) {\r\n                enqueueSnackbar('Нельзя кликать на тот же самый квадрат!', { variant: 'error' });\r\n            } else {\r\n                setBlockClickPlayground(true)\r\n                if (currentPicture.name === cardClick.name) {\r\n                    const newCardsArr = cards.map((card) => {\r\n                        if (card.name === cardClick.name) {\r\n                            return {\r\n                                ...card,\r\n                                visible: true\r\n                            }\r\n                        } else {\r\n                            return card\r\n                        }\r\n                    })\r\n\r\n                    dispatch(setCards(newCardsArr))\r\n\r\n                    // закрыть\r\n                    setTimeout(() => {\r\n                        const newCardsArr = cards.map((card) => {\r\n                            if (card.name === cardClick.name) {\r\n                                return {\r\n                                    ...card,\r\n                                    visible: true,\r\n                                    checked: true\r\n                                }\r\n                            } else {\r\n                                return card\r\n                            }\r\n                        })\r\n                        setBlockClickPlayground(false)\r\n                        dispatch(setCards(newCardsArr))\r\n                    }, 500);\r\n                } else {\r\n                    // открыть\r\n                    const newCardsArr = cards.map((card) => {\r\n                        if (card.path === cardClick.path) {\r\n                            return {\r\n                                ...card,\r\n                                visible: true\r\n                            }\r\n                        } else {\r\n                            return card\r\n                        }\r\n                    })\r\n\r\n                    dispatch(setCards(newCardsArr))\r\n\r\n                    // закрыть\r\n                    setTimeout(() => {\r\n                        const newCardsArr = cards.map((card) => {\r\n                            return {\r\n                                ...card,\r\n                                visible: false\r\n                            }\r\n\r\n                        })\r\n                        setBlockClickPlayground(false)\r\n                        dispatch(setCards(newCardsArr))\r\n                    }, 1500);\r\n                }\r\n                dispatch(setCurrentPicture(null))\r\n            }\r\n\r\n        } else {\r\n            dispatch(setCurrentPicture(cardClick))\r\n\r\n            const newCardsArr = cards.map((card) => {\r\n                if (card.path === cardClick.path) {\r\n                    return {\r\n                        ...card,\r\n                        visible: true\r\n                    }\r\n                } else {\r\n                    return card\r\n                }\r\n            })\r\n            dispatch(setCards(newCardsArr))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={classNames(classes.root, blockClickPlayground && classes.blockClick)}>\r\n            {\r\n                cards.map((card, index) => {\r\n                    const onClick = () => handleCardClick(card)\r\n\r\n                    return (\r\n                        <Card key={card.path + index} card={card} onClick={onClick} />\r\n                    )\r\n                })\r\n            }\r\n\r\n        </div>\r\n    )\r\n})\r\n","export const cards = [\r\n    {\r\n        path: '/static/img/1.svg',\r\n        visible: false,\r\n        name: 'youtube',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2.svg',\r\n        visible: false,\r\n        name: 'redfl',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/3.svg',\r\n        visible: false,\r\n        name: 'wordpress',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/4.svg',\r\n        visible: false,\r\n        name: 'wiki',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/5.svg',\r\n        visible: false,\r\n        name: 'whatsUp',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/6.svg',\r\n        visible: false,\r\n        name: 'vimeo',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/7.svg',\r\n        visible: false,\r\n        name: 'vivi',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/8.svg',\r\n        visible: false,\r\n        name: 'tweeter',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/9.svg',\r\n        visible: false,\r\n        name: 'tj',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/10.svg',\r\n        visible: false,\r\n        name: 'bus',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/11.svg',\r\n        visible: false,\r\n        name: 'snake',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/12.svg',\r\n        visible: false,\r\n        name: 'spotify',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/13.svg',\r\n        visible: false,\r\n        name: 'soundCloud',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/14.svg',\r\n        visible: false,\r\n        name: 'snap',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/15.svg',\r\n        visible: false,\r\n        name: 'skype',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/16.svg',\r\n        visible: false,\r\n        name: 'redCube',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/17.svg',\r\n        visible: false,\r\n        name: 'blueuzor',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/18.svg',\r\n        visible: false,\r\n        name: 'redit',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_1.svg',\r\n        visible: false,\r\n        name: 'youtube',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_2.svg',\r\n        visible: false,\r\n        name: 'redfl',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_3.svg',\r\n        visible: false,\r\n        name: 'wordpress',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_4.svg',\r\n        visible: false,\r\n        name: 'wiki',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_5.svg',\r\n        visible: false,\r\n        name: 'whatsUp',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_6.svg',\r\n        visible: false,\r\n        name: 'vimeo',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_7.svg',\r\n        visible: false,\r\n        name: 'vivi',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_8.svg',\r\n        visible: false,\r\n        name: 'tweeter',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_9.svg',\r\n        visible: false,\r\n        name: 'tj',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_10.svg',\r\n        visible: false,\r\n        name: 'bus',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_11.svg',\r\n        visible: false,\r\n        name: 'snake',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_12.svg',\r\n        visible: false,\r\n        name: 'spotify',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_13.svg',\r\n        visible: false,\r\n        name: 'soundCloud',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_14.svg',\r\n        visible: false,\r\n        name: 'snap',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_15.svg',\r\n        visible: false,\r\n        name: 'skype',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_16.svg',\r\n        visible: false,\r\n        name: 'redCube',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_17.svg',\r\n        visible: false,\r\n        name: 'blueuzor',\r\n        checked: false,\r\n    },\r\n    {\r\n        path: '/static/img/2_18.svg',\r\n        visible: false,\r\n        name: 'redit',\r\n        checked: false,\r\n    },\r\n]\r\n","import React, { useEffect } from 'react'\nimport './App.css'\nimport Container from '@material-ui/core/Container'\nimport { Timer } from './components'\nimport { PlayGround } from './components/PlayGround'\nimport { cards } from './core/cardsArray'\nimport { useDispatch } from 'react-redux'\nimport { setCards } from './redux/action/cardsAction'\nimport { shuffle } from './core/shuffleArr'\n\nfunction App() {\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(setCards(shuffle(cards)))\n    })\n\n    return (\n        <div className=\"App\">\n            <Container maxWidth=\"sm\">\n                <Timer />\n                <PlayGround />\n            </Container>\n        </div>\n    )\n}\n\nexport default App\n","export const shuffle = array => {\r\n    for (let i = array.length - 1; i > 0; i--) {\r\n        let j = Math.floor(Math.random() * (i + 1))\r\n        ;[array[i], array[j]] = [array[j], array[i]]\r\n    }\r\n    return array\r\n}\r\n","const initialState = {\r\n    cards: [],\r\n    currentPicure: null\r\n}\r\n\r\nexport const cardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_CARDS': {\r\n            return {\r\n                ...state,\r\n                cards: [...action.payload],\r\n            }\r\n        }\r\n\r\n        case 'SET_CURRENT_PICTURE': {\r\n            return {\r\n                ...state,\r\n                currentPicure: action.payload,\r\n            }\r\n        }\r\n\r\n        default: {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport { cardsReducer } from './cardReducer'\r\n\r\nconst rootReducer = combineReducers({\r\n    playGround: cardsReducer,\r\n})\r\n\r\nexport default rootReducer\r\n","import { createStore, compose, applyMiddleware } from 'redux'\r\n// import thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst composeEnhancers =\r\n    typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\r\n        ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\r\n        : compose\r\n\r\nconst store = createStore(rootReducer, composeEnhancers())\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { Provider } from 'react-redux'\nimport { SnackbarProvider } from 'notistack'\nimport store from './redux/store'\n\nReactDOM.render(\n    <SnackbarProvider maxSnack={3}>\n        <Provider store={store}>\n            <App />{' '}\n        </Provider>\n    </SnackbarProvider>,\n    document.getElementById('root'),\n)\n"],"sourceRoot":""}